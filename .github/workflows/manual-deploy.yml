name: Manual deploy

on:
  push:
    tags:
      - v*

jobs:

  Build-and-Push:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile.prod
          tags: "xanmarta/watch2gether:${{ env.RELEASE_TAG }}"
          secrets: GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}


  Deploy:
    runs-on: ubuntu-latest
    needs: Build-and-Push
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Retrieve tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: Retrieve private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ github.workspace }}/keys
          chmod 600 "${{ github.workspace }}/keys"

      - name: Deploy
        run: |
          ssh -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} rm -rf /home/${{ secrets.SSH_USER }}/w2g
          scp -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" -r "${{ github.workspace }}/deploy/script" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/w2g
          ssh -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} bash /home/${{ secrets.SSH_USER }}/w2g/start.sh ${{ secrets.DOCKERHUB_USERNAME }} ${{ secrets.DOCKERHUB_TOKEN }} ${{ env.RELEASE_TAG }}
        shell: bash
