name: Build and Push Image

on:
  push:
    branches:
      - master
      - v[0-9]+

jobs:

  Testing:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      
      - name: Install dependencies for testing
        run: npm install
      
      - name: Testing
        run: npm test


  Build-and-Push:
    runs-on: ubuntu-latest
    needs: Testing
    outputs:
      tag: ${{ steps.version-bump.outputs.tag }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set bump type
        id: bump-type
        run: |
          if [ "${{ github.ref }}" == "refs/head/master" ]; then
            BUMP=major
          else
            BUMP=minor
          fi
          echo "Bump type: $BUMP"
          echo "::set-output name=bump::$BUMP"
      
      - name: Version bump
        id: version-bump
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: .*
          DEFAULT_BUMP: ${{ steps.bump-type.outputs.bump }}
      
      - name: Get new version
        run: echo "New version - ${{ steps.version-bump.outputs.tag }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile.prod
          tags: "xanmarta/watch2gether:${{ steps.version-bump.outputs.tag }}"
          secrets: GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}


  Continuous-Delivery:
    runs-on: ubuntu-latest
    needs: Build-and-Push
    steps:

      - name: Checkout repository 
        uses: actions/checkout@v3

      - name: Retrieve private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ github.workspace }}/keys
          chmod 600 "${{ github.workspace }}/keys"

      - name: Deploy
        run: |
          ssh -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} rm -rf /home/${{ secrets.SSH_USER }}/w2g
          scp -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" -r "${{ github.workspace }}/deploy/script" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/w2g
          ssh -o StrictHostKeychecking=no -i "${{ github.workspace }}/keys" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} bash /home/${{ secrets.SSH_USER }}/w2g/start.sh ${{ secrets.DOCKERHUB_USERNAME }} ${{ secrets.DOCKERHUB_TOKEN }} ${{ needs.Build-and-Push.outputs.tag }}
        shell: bash
